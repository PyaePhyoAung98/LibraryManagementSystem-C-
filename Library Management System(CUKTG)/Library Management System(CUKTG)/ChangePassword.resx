<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>